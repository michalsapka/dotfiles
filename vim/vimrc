" make VIM fast
set ttyfast
set ttymouse=xterm2
set lazyredraw
set ttyscroll=3

call plug#begin('~/.vim/plugged')
" Plugins
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'dbeniamine/todo.txt-vim'
Plug 'ntpeters/vim-better-whitespace'
" Plug 'ervandew/supertab'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-dispatch'
Plug 'thoughtbot/vim-rspec'
Plug 'plasticboy/vim-markdown'
" Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'scrooloose/syntastic'
Plug 'scrooloose/nerdtree'
Plug 'kchmck/vim-coffee-script'
Plug 'mustache/vim-mustache-handlebars'
Plug 'elixir-lang/vim-elixir'

call plug#end()

" Display settings
set t_Co=256
syntax enable
set background=dark
colorscheme solarized
set scrolloff=10

set laststatus=2 " Always display status line
set wildmenu " Show commands matching current
set clipboard=unnamed " Use system clipboard
set list listchars=tab:»·,trail:· " Display extra spaces and tabs
set cursorline
set nofoldenable
set incsearch
set hlsearch
set ignorecase
syntax on

let g:airline_powerline_fonts = 1
let g:airline_theme="molokai"

" Use relative line numbers but show absolute
" line number for current line
" set relativenumber
set number
set relativenumber 

let mapleader = "\<Space>"

" Keep backups in a better place
set backupdir=~/.tmp/backups
set directory=~/.tmp/swaps
if exists("&undodir")
  set undodir=~/.tmp/undo
endif

" tab is two spaces
set expandtab
set tabstop=2
set shiftwidth=2

"use ; instead of :
nmap ; :

filetype plugin on
set omnifunc=syntaxcomplete#Complete

" faster keys
" set ttimeout
" set ttimeoutlen=250
" set notimeout

" vim-rspec config
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" fzf
let g:fzf_layout = { 'down': '~40%' }
map <C-P> :call fzf#vim#files(".")<CR>
map <Leader>c :call fzf#vim#tags()<CR>

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
